name: pr

on:
  - pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - uses: prisma/action-node-cache-dependencies@main

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: prisma/action-node-cache-dependencies@main
      - run: yarn format:check:prettier

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: prisma/action-node-cache-dependencies@main
      - name: Get Reflect Templates Cache Key
        id: get-reflect-templates-cache-key
        run: |
          cacheKey=$(scripts/getReflectTemplatesCacheKey.sh)
          echo "cacheKey=$cacheKey"
          echo "::set-output name=cacheKey::$cacheKey"
        shell: bash
      - name: Cache Templates reflection
        uses: actions/cache@v3
        id: templates-cache
        with:
          path: |
            src/generated
          key: ${{ steps.get-reflect-templates-cache-key.outputs.cacheKey }}
      - run: yarn -s build:gen
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn lint:check

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: prisma/action-node-cache-dependencies@main
      - run: yarn -s build:gen
      - run: yarn type-check

  test-unit:
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node-version: [14.x, 16.x]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - uses: prisma/action-node-cache-dependencies@main
      - run: yarn -s build:gen
      - run: yarn -s test:unit

  test-e2e:
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node-version: [16.x]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn -s test:db:up
      - uses: prisma/action-node-cache-dependencies@main
      - run: yarn -s build:gen
      - run: yarn -s test:e2e
